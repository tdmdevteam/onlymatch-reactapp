name: Build and Deploy

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

env:
  IMAGE: ghcr.io/${{ github.repository }}:latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: docker/setup-buildx-action@v3
      
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: SSH deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          port: ${{ secrets.DEPLOY_PORT }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            set -eo pipefail
            source /etc/profile || true
            set -u
            export PATH="$PATH:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/sbin:/share/CACHEDEV1_DATA/.qpkg/container-station/bin:/share/Container/container-station/bin"

            DOCKER_BIN="$(command -v docker || true)"
            if [ -z "$DOCKER_BIN" ]; then
              echo "docker not found on remote host"
              exit 1
            fi

            "$DOCKER_BIN" login ghcr.io -u ${{ secrets.GHCR_USER }} -p ${{ secrets.GHCR_PAT }}

            DEPLOY_DIR=/share/Dev-Containers/dan-react/opt/web
            mkdir -p "$DEPLOY_DIR"
            cd "$DEPLOY_DIR"

            # Create data directories for persistent storage
            mkdir -p data/uploads
            
            # Create docker-compose.yml if it doesn't exist
            cat > docker-compose.yml << 'EOF'
            version: '3.8'
            services:
              web:
                image: ${{ env.IMAGE }}
                ports:
                  - "9080:80"
                volumes:
                  - ./data/uploads:/var/www/html/backend/public/uploads
                  - ./data/db.sqlite:/var/www/html/backend/db.sqlite
                environment:
                  - PHP_MEMORY_LIMIT=256M
                  - PHP_MAX_UPLOAD_SIZE=10M
                  - PHP_MAX_POST_SIZE=10M
                restart: unless-stopped
            EOF

            if "$DOCKER_BIN" compose version >/dev/null 2>&1; then
              "$DOCKER_BIN" compose pull
              "$DOCKER_BIN" compose down || true
              "$DOCKER_BIN" compose up -d
            elif command -v docker-compose >/dev/null 2>&1; then
              docker-compose pull
              docker-compose down || true
              docker-compose up -d
            else
              echo "docker compose not installed"
              exit 1
            fi

